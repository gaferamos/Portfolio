@inject HttpClient Http


@if (cards == null)
{

}
else
{
    <div class="cards-container">

        @foreach (var card in cards.Select((value, index) => new { value, index }))
        {
            var colapseid = $"colapse{card.index}";


            <div class="card expand-card mb-3" data-bs-toggle="collapse" data-bs-target="#@colapseid" aria-expanded="false"
                 aria-controls="detalhesCard1" style="cursor:pointer;">

                <img src="@card.value.ImgSrc" class="card-img-top" alt="cutepc.jpg">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@card.value.Title</h5>
                    <p class="card-text">@card.value.CardResume</p>


                    <div class="collapse mt-2" id="@colapseid">
                        <p class="card-text">@card.value.CardFullInfo</p>
                        <p class="card-text"><small class="text-body-secondary">@card.value.MinInfo</small></p>
                    </div>
                </div>
            </div>
            <a class="btn btn-primary collapse" id="@colapseid" target="_blank" href="@card.value.RepoLink">Repositorio</a>
        }
    </div>


}
@code {
    

    private List<CardInfoModel>? cards;
   
    [Parameter]
    public string JsonPath { get; set; } = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        cards = await Http.GetFromJsonAsync<List<CardInfoModel>>(JsonPath);
    }
}
